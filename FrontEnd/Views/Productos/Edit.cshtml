@model BackEnd.Entities.Producto

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">


    <div class="row">

        <div class="col-sm-4">

            <br />

            <h4>Editar producto</h4>

            @using (Html.BeginForm("Edit", "Productos", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <br />

                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.IdProducto)

                    <div class="form-group">
                        @Html.LabelFor(model => model.NombreProducto, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NombreProducto, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.NombreProducto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdCategoria, "Categoría", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IdCategoria, new { htmlAttributes = new { @class = "form-control", @required = "required" } })

                            @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdMarca, "Marca", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IdMarca, new { htmlAttributes = new { @class = "form-control", @required = "required" } })

                            @Html.ValidationMessageFor(model => model.IdMarca, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RutaImagen, "Imagen", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">

                            <input type="file" name="file" />
                            @Html.EditorFor(model => model.RutaImagen, new { htmlAttributes = new { @class = "form-control", @required = "required" } })

                            @Html.ValidationMessageFor(model => model.RutaImagen, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PrecioProducto, "Precio", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PrecioProducto, new { htmlAttributes = new { @class = "form-control", @required = "required", onkeypress = "return NumberOnly()" } })
                            @Html.ValidationMessageFor(model => model.PrecioProducto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CantidadProducto, "Cantidad", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CantidadProducto, new { htmlAttributes = new { @class = "form-control", @required = "required", onkeypress = "return NumberOnly()" } })
                            @Html.ValidationMessageFor(model => model.CantidadProducto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Guardar producto" class="btn btn-success" style="width: 100%;" />
                        </div>

                    </div>
                </div>
            }


        </div>

        <div class="col-sm">



            <div class="jumbotron mt-5 mr-5">
                <h2>
                    Editar producto

                </h2>
                <p>
                    <div class="alert alert-warning" role="alert">
                        <h4 class="alert-heading">¡Usted esta a punto de editar un producto!</h4>
                        <p>
                            Recuerde intentar no cometer faltas ortograficas y verificar que tiene el permiso y el stock necesario para agregar un producto.
                            No quisieramos tener stock fantasma como en ExtremeTech, nuestros clientes son lo mas importante para nosotros.
                        </p>

                        <hr>
                        <p class="mb-0">Cuando este listo solo presione el boton guardar producto, si requiere ayuda, contacte con un administrador mas experimentado.</p>
                    </div>
                </p>
                <div class="form-group">

                    <div class="col-md-offset-2 col-md-5">
                        @Html.ActionLink("Regresar a la tabla", "Index", null,
                              new { @class = "btn btn-warning", style = "width: 100%;" })
                    </div>


                </div>
            </div>




        </div>

    </div>
</div>

@section scripts {

    <script>
        $(document).ready(function () {
            $('input[type="file"]').change(function (e) {
                var fileName = e.target.files[0].name;
                document.getElementById("RutaImagen").value = "/img/" + fileName;

            });
        });

        function NumberOnly() {
            var AsciiValue = event.keyCode
            if (AsciiValue >= 48 && AsciiValue <= 57)
                event.returnValue = true;
            else
                event.returnValue = false;
        }
    </script>

}